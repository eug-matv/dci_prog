//---------------------------------------------------------------------------
/*Структура для оценки вероятнсти по первичному и вторичному каналов.
Минимальное число обзоров, чтобы оценить вероятность по первичному или вторичному каналов равна 10.
Число обзоров с пропущенными отметками для сброса оценки вероятности равно 10, то есть если
не было 10 обзоров отметки первичного канала, то оценка вероятности обнаружения по ПК считается
не определенной, если более 10 по ВК аналогично
*/

#ifndef probalityH
#define probalityH
//---------------------------------------------------------------------------
class TOcenkaVeroyatnosti
{
   long lNomerTrassy;  //Номер трассы
   unsigned char OP[40];   //Отметки первичного канала
   long LastOP;        //Последний индекс
   long N_of_MustP;    //Число обзоров по которым оценивется число отметок ПК
   long N_of_P;        //Число обзоров пропущенными отметками
   long N_of_PropuskP; //Число пропусков по ПК
   int WasP;     //Началась ли оценка по ПК
   unsigned char OS[40];   //Отметки вторичного канала
   long LastOS;        //Последний индекс
   long N_of_MustS;    //Число обзоров по которым оценивется число отметок ВК
   long N_of_S;        //Число обзоров пропущенными отметками
   long N_of_PropuskS; //Число пропусков по ВК
   int WasS;     //Началась ли оценка по ВК

public:
   TOcenkaVeroyatnosti();
   TOcenkaVeroyatnosti(long _lNomerTrassy);
   void SetNomerTrassy(long _lNomerTrassy)
   {
      lNomerTrassy=_lNomerTrassy;
      N_of_MustP=N_of_P=N_of_PropuskP=WasP=
      N_of_MustS=N_of_S=N_of_PropuskS=WasS=0;
   };

//Добавление отметки
//Возвращает 0, если номер трассы не совпадает, иначе 1
   int AddOtmetka(int Kanal   //Канал
                  );  //Номер трассы



//Получение оценки вероятности
//Возвращает от 0 до 1 если оценку вероятности, иначе -1
   double GetPropably(
                  int Kanal);   //Канал 0 - первичный, 1 - вторичный

//Получение числа отсчетов по которым канал был обнаружен
   int GetN_of_O(int Kanal); //Канал 0 - первичный, 1 - вторичный

//Получение числа обзоров, по которым проводилась оценка
   int GetN_of_MustO(int Kanal); //Канал 0 - первичный, 1 - вторичный


};



#endif
