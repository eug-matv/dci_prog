/*
 омбинированный метод касательных и хорд:
  ќсновные процедуры:
  EMFindMetodNuton1 - решение уранени€ с одним неизвестным с передаваемыми
  функции f, ее производной f1, ее второй производной f2, диапазона (t1, t2),
  требуема€ точность (dt)
  рузультат помещаетс€ в *tret.
  ¬озвращает 1, если было найдено решение, иначе возвращает 0.







  EMMetodHord1 - решение уравнени€ F(t)=0 методом хорд.
  ƒанна€ функци€ должна быть непрерывна.
  ”равнению передаютс€ параметры:
   указатель на функцию f типа double (*)(double),
 начальный диапазон значений t1, t2, причем t1<t2 типа double,
   требуема€ точность dt (когда разница t2 - t1 станет меньше dt, тогда стоп)
   ¬озвращаемый параметр *t_ret указатель double.
   ѕроцедура возвращает 1, когда найдено решение.
   0 - если t1>=t2,
   -1 - если  f(t1)*f(t2)>0.




*/


//---------------------------------------------------------------------------

#ifndef NutonIHordH
#define NutonIHordH
//---------------------------------------------------------------------------

/*
  EMMetodHord1 - решение уравнени€ F(t)=0 методом хорд.

ƒанна€ функци€ должна быть непрерывна.
  ”равнению передаютс€ параметры:
   указатель на функцию f типа double (*)(double),
 начальный диапазон значений t1, t2, причем t1<t2 типа double,
   требуема€ точность dt (когда разница t2 - t1 станет меньше dt, тогда стоп)
   если dFt отличаетс€ от 0 на данное значение и менее то, считать в данной точке найденное значение,
   ¬озвращаемый параметр *t_ret указатель double.
   ѕроцедура возвращает 1, когда найдено решение.
   0 - если t1>=t2,
   -1 - если  f(t1)*f(t2)>0.
*/

long EMMetodHord1(double (*f)(double),
                  double t1,
                  double t2,
                  double dt,
                  double dFt,
                  double *tret);

#endif
